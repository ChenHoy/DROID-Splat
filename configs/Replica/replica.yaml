verbose: False
dataset: 'replica'
mode: 'rgbd'
stride: 1
mapping:
  device: "cuda:0"

tracking:
  device: "cuda:0"
  buffer: 250
  beta: 0.75
  warmup: 12
  upsample: True
  motion_filter:
    thresh: 4.0  # add as keyframe if avg flow >= 4.0 pixels
  multiview_filter:
    thresh: 0.01  # dpeth error < 0.01m
    visible_num: 2  # points viewed by at least 2 cameras
    kernel_size: inf
    bound_enlarge_scale: 1.20
  frontend:
    radius: 1
    nms: 0
    thresh: 25.0  # only consider edge with avg flow < 25.0 pixels

cam:
  ### original camera parameters
  H: 680
  W: 1200
  fx: 600.0
  fy: 600.0
  cx: 599.5
  cy: 339.5
  png_depth_scale: 6553.5 #for depth image in png format
  ### target/output camera settings, camera_size -> resize -> crop -> target_size
  H_edge: 0
  W_edge: 0
  H_out: 320
  W_out: 640

rendering:
  N_samples: 24
  N_surface: 48

meshing:
  eval_rec: True
  resolution: 512  # change to 512 for higher resolution geometry
  get_largest_components: False
  remove_small_geometry_threshold: 0.2
  n_points_to_eval: 200000
  mesh_threshold_to_eval: 0.05
  forecast_radius: 25

Dataset:
  sensor_type: 'depth'
  pcd_downsample: 64
  pcd_downsample_init: 32
  adaptive_pointsize: True
  point_size: 0.05
  type: 'replica'

Training:
  prune_every: 10
  rgb_boundary_threshold: 0.01
  alpha: 0.95
  gaussian_th: 0.005
  gaussian_extent: 10
  size_threshold: 20
  refinement:
    gaussian_th: 0.3
    gaussian_extent: 2
    size_threshold: 20


  lr: # Pose lr for mapping
    cam_rot_delta: 0.0003
    cam_trans_delta: 0.0001

Setup:
  warmup: 0 # Wait until tracking gets to this frame
  mapping_iters: 20 # At each new frame, 10 views
  refinement_iters: 100 # Once at the end, all views
  use_gui: True
  optimize_poses: False
  update_frames: True
  filter_depth: True
  save_renders: True
  render_path: ""
  mesh_path: ""
